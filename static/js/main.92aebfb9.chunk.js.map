{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","_ref$onAdd","onAdd","count","isFilled","setIsFilled","emptyMovie","_useState5","_useState6","newMovie","setNewMovie","handleOnChange","_objectSpread","_defineProperty","useEffect","isFormFilled","length","onSubmit","preventDefault","disabled","App","_toConsumableArray","moviesFromServer","_useState2","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92aebfb9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string, name: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value, name)}\n          onBlur={() => setToched(value === '')}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd?: (movie: Movie) => void,\n};\n\nexport const NewMovie = ({ onAdd = () => { } }: Props) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count] = useState(0);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const emptyMovie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [newMovie, setNewMovie] = useState(emptyMovie);\n\n  const handleOnChange = (value: string, name: string) => {\n    setNewMovie({\n      ...newMovie,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onAdd(newMovie);\n    setNewMovie(emptyMovie);\n  };\n\n  useEffect(() => {\n    const isFormFilled\n      = newMovie.title.length > 0\n      && newMovie.imgUrl.length > 0\n      && newMovie.imdbUrl.length > 0\n      && newMovie.imdbId.length > 0;\n\n    if (isFormFilled) {\n      setIsFilled(true);\n    } else {\n      setIsFilled(false);\n    }\n  }, [newMovie]);\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={handleOnChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={handleOnChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={handleOnChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={handleOnChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={handleOnChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isFilled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={(movie) => {\n          setMovies([...movies, movie]);\n        }}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}